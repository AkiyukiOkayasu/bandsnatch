name: CI

env:
  CICD_INTERMEDIATES_DIR: "_cicd-intermediates"

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - arch: "x86_64"
            libc: "musl"
          - arch: "i686"
            libc: "musl"
          - arch: "armv7"
            libc: "musleabihf"
          - arch: "arm"
            libc: "musleabi"
          - arch: "arm"
            libc: "musleabihf"
    steps:
      - uses: actions/checkout@v2
      - name: Pull Docker image
        run: docker pull messense/rust-musl-cross:${{ matrix.arch }}-${{ matrix.libc }}
      - name: Build in Docker
        run: docker run --rm -i -v "$(pwd)":/home/rust/src messense/rust-musl-cross:${{ matrix.arch }}-${{ matrix.libc }} cargo build --release
      - name: Strip binary
        run: docker run --rm -i -v "$(pwd)":/home/rust/src messense/rust-musl-cross:${{ matrix.arch }}-${{ matrix.libc }} musl-strip -s /home/rust/src/target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/bandsnatch
      - uses: actions/upload-artifact@v2
        with:
          name: "bandsnatch-linux-${{ matrix.arch }}-${{ matrix.libc }}"
          path: "target/${{ matrix.arch }}-unknown-linux-${{ matrix.libc }}/release/bandsnatch"

  build-macos:
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v2
      - name: Install target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          profile: minimal
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: "target/${{ matrix.target }}/release/bandsnatch"

  build-windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-pc-windows-msvc
      - uses: actions/upload-artifact@v2
        with:
          name: "bandsnatch-windows-x86_64-msvc"
          path: "target/x86_64-pc-windows-msvc/release/bandsnatch.exe"